import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
# from pdfid.pdfid import get_fake_options, PDFiDMain
from sklearn.preprocessing import StandardScaler
# from sklearn.metrics import accuracy_score
import pickle

# import clean and malware dataset
df_clean = pd.read_csv('CleanCSV.csv', index_col=0)
df_malware = pd.read_csv('MalwareCSV.csv', index_col=0)

# Merging the datasets together
df = pd.merge(df_malware, df_clean, how='outer')

# Preprocessing and cleaning the dataset

# Convert header column to float

floated_header = pd.to_numeric(
    df['header'].str.replace('[^\d.]', ''), errors='coerce')

# Assign new values to float
df['header'] = floated_header

# Dropping null values
df.dropna(inplace=True)

# Training the datasets dropped values: filename, version, /Colors > 2^24

# Assigning values to X and y
X = df.drop(['filename', 'version', '/Colors > 2^24', 'target'], axis=1)
y = df['target']

# Splitting dataset intok training and test data
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=42)

# scaling the datasets
sc_x = StandardScaler()

X_train = sc_x.fit_transform(X_train)
X_test = sc_x.transform(X_test)

# using SVM
svc = SVC(C=1000, gamma=0.001)
svc.fit(X_train, y_train)

# pred = svc.predict(X_test)

# print(accuracy_score(y_test, pred))

# Storing model in pickle for faster use
pickle.dump(svc, open("svm_model.sav", "wb"))
pickle.dump(sc_x, open("standard_scaler.sav", "wb"))
